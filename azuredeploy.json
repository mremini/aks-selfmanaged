{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aksEngineVersion": {
      "metadata": {
        "description": "Contains details of the aks-engine version which was used to provision the cluster"
      },
      "type": "string"
    },
    "apiServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "apiServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "caCertificate": {
      "metadata": {
        "description": "The base 64 certificate authority certificate"
      },
      "type": "string"
    },
    "caPrivateKey": {
      "metadata": {
        "description": "The base 64 CA private key used on the master."
      },
      "type": "securestring"
    },
    "clientCertificate": {
      "metadata": {
        "description": "The base 64 client certificate used to communicate with the master"
      },
      "type": "string"
    },
    "clientPrivateKey": {
      "metadata": {
        "description": "The base 64 client private key used to communicate with the master"
      },
      "type": "securestring"
    },
    "cloudproviderConfig": {
      "defaultValue": {
        "cloudProviderBackoff": false,
        "cloudProviderBackoffDuration": 0,
        "cloudProviderBackoffExponent": "0",
        "cloudProviderBackoffJitter": "0",
        "cloudProviderBackoffMode": "v1",
        "cloudProviderBackoffRetries": 10,
        "cloudProviderDisableOutboundSNAT": false,
        "cloudProviderRateLimit": false,
        "cloudProviderRateLimitBucket": 0,
        "cloudProviderRateLimitBucketWrite": 0,
        "cloudProviderRateLimitQPS": "0",
        "cloudProviderRateLimitQPSWrite": "0"
      },
      "type": "object"
    },
    "cniPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/cni-plugins/v0.7.6/binaries/cni-plugins-amd64-v0.7.6.tgz",
      "type": "string"
    },
    "containerRuntime": {
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "defaultValue": "docker",
      "metadata": {
        "description": "The container runtime to use (docker|containerd)"
      },
      "type": "string"
    },
    "containerdDownloadURLBase": {
      "defaultValue": "https://storage.googleapis.com/cri-containerd-release/",
      "type": "string"
    },
    "containerdVersion": {
      "allowedValues": [
        "1.3.2",
        "1.3.3",
        "1.3.4",
        "1.3.5",
        "1.3.6",
        "1.3.7",
        "1.3.8",
        "1.3.9",
        "1.4.4"
      ],
      "defaultValue": "1.4.4",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "dockerBridgeCidr": {
      "metadata": {
        "description": "Docker bridge network IP address and subnet"
      },
      "type": "string"
    },
    "enableAggregatedAPIs": {
      "defaultValue": false,
      "metadata": {
        "description": "Enable aggregated API on master nodes"
      },
      "type": "bool"
    },
    "etcdClientCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdClientPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdDiskSizeGB": {
      "metadata": {
        "description": "Size in GB to allocate for etcd volume"
      },
      "type": "string"
    },
    "etcdDownloadURLBase": {
      "metadata": {
        "description": "etcd image base URL"
      },
      "type": "string"
    },
    "etcdEncryptionKey": {
      "metadata": {
        "description": "Encryption at rest key for etcd"
      },
      "type": "string"
    },
    "etcdPeerCertificate0": {
      "metadata": {
        "description": "The base 64 server certificates used on the master"
      },
      "type": "string"
    },
    "etcdPeerPrivateKey0": {
      "metadata": {
        "description": "The base 64 server private keys used on the master."
      },
      "type": "securestring"
    },
    "etcdServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdVersion": {
      "metadata": {
        "description": "etcd version"
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "10.61.4.10",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "fqdnEndpointSuffix": {
      "defaultValue": "cloudapp.azure.com",
      "metadata": {
        "description": "Endpoint of FQDN."
      },
      "type": "string"
    },
    "gcHighThreshold": {
      "defaultValue": 85,
      "metadata": {
        "description": "High Threshold for Image Garbage collection on each node"
      },
      "type": "int"
    },
    "gcLowThreshold": {
      "defaultValue": 80,
      "metadata": {
        "description": "Low Threshold for Image Garbage collection on each node."
      },
      "type": "int"
    },
    "generatorCode": {
      "metadata": {
        "description": "The generator code used to identify the generator"
      },
      "type": "string"
    },
    "kubeBinaryURL": {
      "defaultValue": "",
      "metadata": {
        "description": "The package tarball URL to extract kubelet and kubectl binaries from."
      },
      "type": "string"
    },
    "kubeClusterCidr": {
      "metadata": {
        "description": "Kubernetes cluster subnet"
      },
      "type": "string"
    },
    "kubeConfigCertificate": {
      "metadata": {
        "description": "The base 64 certificate used by cli to communicate with the master"
      },
      "type": "string"
    },
    "kubeConfigPrivateKey": {
      "metadata": {
        "description": "The base 64 private key used by cli to communicate with the master"
      },
      "type": "securestring"
    },
    "kubeDNSServiceIP": {
      "metadata": {
        "description": "Kubernetes DNS IP"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "eastus",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterOffset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
      },
      "type": "int"
    },
    "masterSubnet": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the subnet of the master node(s)"
      },
      "type": "string"
    },
    "masterSubnetIPv6": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the IPv6 subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "masterVnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of the master."
      },
      "type": "string"
    },
    "maxPods": {
      "defaultValue": 30,
      "metadata": {
        "description": "This param has been deprecated."
      },
      "type": "int"
    },
    "mobyVersion": {
      "allowedValues": [
        "3.0.1",
        "3.0.2",
        "3.0.3",
        "3.0.4",
        "3.0.5",
        "3.0.6",
        "3.0.7",
        "3.0.8",
        "3.0.10",
        "3.0.11",
        "3.0.12",
        "3.0.13",
        "19.03.11",
        "19.03.12",
        "19.03.13",
        "19.03.14",
        "20.10.5"
      ],
      "defaultValue": "19.03.14",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "17306082",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "networkMode": {
      "allowedValues": [
        "",
        "transparent",
        "bridge"
      ],
      "defaultValue": "transparent",
      "metadata": {
        "description": "The network mode to use for CNI (transparent|bridge)"
      },
      "type": "string"
    },
    "networkPlugin": {
      "allowedValues": [
        "kubenet",
        "azure",
        "flannel",
        "cilium",
        "antrea"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network plugin to use for Kubernetes (kubenet|azure|flannel|cilium|antrea)"
      },
      "type": "string"
    },
    "networkPolicy": {
      "allowedValues": [
        "",
        "none",
        "azure",
        "calico",
        "cilium",
        "antrea"
      ],
      "defaultValue": "calico",
      "metadata": {
        "description": "The network policy enforcement to use (calico|cilium|antrea); 'none' and 'azure' here for backwards compatibility"
      },
      "type": "string"
    },
    "nodepool1Count": {
      "defaultValue": 2,
      "metadata": {
        "description": "The number of vms in agent pool nodepool1"
      },
      "type": "int"
    },
    "nodepool1Offset": {
      "defaultValue": 0,
      "metadata": {
        "description": "offset to a particular vm within a VMAS agent pool"
      },
      "type": "int"
    },
    "nodepool1VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nodepool1VnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'nodepool1'."
      },
      "type": "string"
    },
    "nodepool1osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "nodepool1osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "nodepool1osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "nodepool1osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "nodepool1osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "nodepool1osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "nodepool2Count": {
      "defaultValue": 1,
      "metadata": {
        "description": "The number of vms in agent pool nodepool2"
      },
      "type": "int"
    },
    "nodepool2Offset": {
      "defaultValue": 0,
      "metadata": {
        "description": "offset to a particular vm within a VMAS agent pool"
      },
      "type": "int"
    },
    "nodepool2VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nodepool2VnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'nodepool2'."
      },
      "type": "string"
    },
    "nodepool2osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "nodepool2osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "nodepool2osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "nodepool2osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "nodepool2osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "nodepool2osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "nodepool3Count": {
      "defaultValue": 1,
      "metadata": {
        "description": "The number of vms in agent pool nodepool3"
      },
      "type": "int"
    },
    "nodepool3Offset": {
      "defaultValue": 0,
      "metadata": {
        "description": "offset to a particular vm within a VMAS agent pool"
      },
      "type": "int"
    },
    "nodepool3VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nodepool3VnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'nodepool3'."
      },
      "type": "string"
    },
    "nodepool3osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "nodepool3osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "nodepool3osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "nodepool3osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "nodepool3osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "nodepool3osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "orchestratorName": {
      "maxLength": 3,
      "metadata": {
        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
      },
      "minLength": 3,
      "type": "string"
    },
    "osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "vnetCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Cluster vnet cidr"
      },
      "type": "string"
    },
    "vnetCidrIPv6": {
      "defaultValue": "2001:1234:5678:9a00::/56",
      "metadata": {
        "description": "Cluster vnet cidr IPv6"
      },
      "type": "string"
    },
    "vnetCniLinuxPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-linux-amd64-v1.0.30.tgz",
      "type": "string"
    },
    "vnetCniWindowsPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-windows-amd64-v1.0.30.zip",
      "type": "string"
    }
  },
  "variables": {
    "agentLbBackendPoolName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentLbName'))]",
    "agentLbIPConfigID": "[concat(variables('agentLbID'),'/frontendIPConfigurations/', variables('agentLbIPConfigName'))]",
    "agentLbIPConfigName": "[concat(parameters('orchestratorName'), '-agent-outbound')]",
    "agentLbName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentPublicIPAddressName": "[concat(parameters('orchestratorName'), '-agent-ip-outbound')]",
    "alwaysPullWindowsPauseImage": "false",
    "apiVersionAuthorizationSystem": "2018-09-01-preview",
    "apiVersionAuthorizationUser": "2018-09-01-preview",
    "apiVersionCompute": "2019-07-01",
    "apiVersionDeployments": "2018-06-01",
    "apiVersionKeyVault": "2019-09-01",
    "apiVersionManagedIdentity": "2018-11-30",
    "apiVersionNetwork": "2018-08-01",
    "apiVersionStorage": "2018-07-01",
    "applicationInsightsKey": "c92d8284-b550-4b06-b7ba-e80fd7178faa",
    "cloudInitFiles": {
      "customSearchDomainsScript": "H4sIAAAAAAAA/3yQP2/bQAzF9/sUrN2hHU4nGzC6tkOzZsqSRaBOtHTR6SiQdBwZ+fCBIwNBgCALAb73wD+/7Y/QphJa1MEpGfgXp3ySSBB4toCXk1CIXAxTIdEwCz8nTVyaNVbp4BzFgWED0BX1SihxgA28ghGBRwhkMRSyM8sYUjGSI0bSqguH2sfMp86nkqyKx97pokZTtNwIqaEY7Gs4wK6G24BUenfGZM2RpcHZmsxxVCdkssSpuyYPsNvXgLP5/vrQAqmoYc4ghHnqQFXX4o05KyhOLfrI08RlbT5L82IDl3315ybn1CrMGEfsaUz21TkrkCuD953wxKmAf4C/P399WCYQ0F8ChH/+MfyGbzy3/X9/594CAAD//x81gP2sAQAA",
      "dhcpv6ConfigurationScript": "H4sIAAAAAAAA/3RRT2vbThC9z6d4P8U4vx7WsgvxpWmgKFIqaiQIDr0UhKwdRUvVXVW76wQcffeiCBXaOpcd5jHvz85c/Bd624cHpUPWRxxK2xBZdhA8FYNOdVyXqp16T3T7OdqlcbbfFlGeJUWS7uKPIbsqlE3VjU+rWLvtqjK6pmiXP9wWaZbuiyi5m+Y0uyfTfw+VdtzXZcV2JcOrtaha46VQWrlVVT8S9VxKiB5C4vISWbz/mt9/eTVN7x7uP+3TPMP1dZxHeHmB6z2TGtXArllDaXZblN4ZAgDfwbbMHa7mdg4KsYHYQlQ13voFRFsjPJZ92KrD3wOj26rl0rKFOE7mc544j4hKKQtVF9q4gp+Vdfb/dzgR8NhzB/HzOUGwOG2GYCzvh2Akc9WYGb25mXAaiJzxVfN2zOUS/5ghcOoHG++wWX8IsDidOd8wMr8RzrEXp7OLH0apP4/7W8V6aaBqaZ70tI7lcsZ894rQRZwn9CsAAP//3eGEyH0CAAA=",
      "dhcpv6SystemdService": "H4sIAAAAAAAA/zTNsc6CMBAH8P1e45uh27d10IiJkwMaB8JQy19prNfmeqD49A7EJ/h1Zw7a0w7FS8gaEluwu0YMo8/zP21uCrEMfSV5VIljYNTq5A4l6lrIHDx6Oi0ZNjHKmJSaN3yrTtSalNW4zyQwPrG6wJBiVqBahbqMRN2Bi7oYe7o4VgzbxT6nqKGaCuTH/TXHPX0DAAD//wVR54mwAAAA",
      "dockerMonitorSystemdService": "H4sIAAAAAAAA/zSOwUrDQBCG7/sUC56T6APsoeoKOZhC0uIhBBk3UzN0Myuzk9q8vdDY2zcw//f//ZFJB/OKOQj9KCV2YDe2OoHaMGE4ZzumcEaxE0LUyQKPVjAriGZLJ8uII45md1IUt72WGeVCAU3fbTCYdks4iL+w5vvZYXBPj6bFGYhvBn8ldStm4/lCknhGVveybw67uvHtZ3tsDvW7/+8x/oqhu3mrJUsVU4BYfRFX29ZiTkyapMyTDYkViFEKWVhpRtPXnBViHMwHsOL4vLp5iUrFklFKBflGNQ9+/2b+AgAA//9HkzLkKQEAAA==",
      "etcdMonitorSystemdService": "H4sIAAAAAAAA/zSOsUrFQBBF+/mKBeuX6AdsoRjBSnhBLEKKcXOfO7jZyMxEX/5eTLC7F86BM7xW8ZEeYUnly2WpkcOxg2f2kDLSpwV4mkIGF8+B6xQU5qxuQS6hAhMmur84NP6BjUG/JYGG/hgjnQ8+cvnhzf5vjxTvbumMmaXufncVjxuMuitSvyvtatqWJXFp36W2R8RpXqr4oo3lvY2G52rOpYz0xtUxPWxxXovLaTVo46wfcLrpXp7oNwAA//+L4/L48wAAAA==",
      "etcdSystemdService": "H4sIAAAAAAAA/4SRPY/bMAyGd/0KDb1R0X6ABrd22xvuA0kOHYIgkG0mJiJTLkX56n9fWOihTTt0JZ9H4Pvq8EooR1VD6hgnwUgOpOu10QNehrAYP3sMvg2gr7Do2YcMOklkUHXs8ggkvliDyJTurb2gDLnddHG0XWSIya7v/QWPnu7LuDoLsCOQt8jXjXi+gOjZswnYmpXoMV03Y8wk6psnSe+siRSQ4D/KYQc8YwdH1dCMHGk9wdVV8/j8dKq2X3buZtHsP9Wnp+qxcXdf/13U1b461Q/bG+czBnBmzWh7OPscxN5Nar9M4CgKnhf1moBLp+oFeMSUMFLaiWd5prA44Qyq+QFdGb0wONsi2XL/FJFEm+/azp5twNa+5/ttOJsTF6X824c/wqktpIL48OaXpA4PlMSHcCxVQv9xcWMOgiYn4F9Nqp8BAAD//xtfqZERAgAA",
      "healthMonitorScript": "H4sIAAAAAAAA/6xW0W7bNhR951fcqMLQPsi0UqDd3ClAUBiLsS4NbGcPKwpDoa4rwhIpkJTbVNG/DxRl2YodJ0uWl1jCOefee3hI6tUJLbWiN1xQFGu4iXVKtCwVQ6CyMDT+WSqkTAoTc4FK00LJNddcioWDDXRKiEYDgQQhS6HRbB4LXuAy5hkhHX+hSmF4jotcCm6k4uLb6zdQEQCdIRbwdjgEApBJFmfAFF+IOMfI86uPny/n55PL8XQxvb6cT/4aj4JEshWq2gOWJ5HnnqDQHgHgS/jyBQ6waogi8Lp2Eg++fv0AJkVBAMApMaMgELD6VQ+4hO3okDXaS04IwPeUZwhGlfgBEtmQ+RJOwA4nSwPvhuBXLE9qOKMJrqkos2ynEACyVIL3caMOrTGW1Y5dgzUPkxOvpTiLwsah/16wc2Wj31jhbLtng/srVjzLIJhN/rieTUNwyKQDLPlR4Qc9Pii+RR/S17faYM5MBo4V2H/B91RGecwFeDueeVtS49a7zq3Wr60W10HMDF/3PN9rdIvXJlZmF7vfavsDM429NfP8avZpPL5aNBl0PTbYRAokNSGr8gYzNE/aFnn8Y6GRSZHoKByCLE1RmsjztgAnsnBpLlUGQQ5+tcOrIVhCoCGYQWpMMaI0PH0/GA6Gg3DkVxfj80/zi3+uPk/nNU0xzkz60zuS+bYD/7Vf7ZSu4fTsl/DNfuh9h+/tgz/d/MA1lMKVvD2e+6cX3ctPa/ZzktJSH03J/RIvTwgalvw/8UCRFJILE3l27fWIUr+6mk7+Pp+PF5OrenT69v1vR8PU5OZApAIWM1QGKBpGrQNKoEFN7UtNWTxgyljUwxg7JMs4CtNiV3j7ONSC/GozVk3XpzSPWcoF6mfE9omJtfVfHtdHkmqLPCemlvdoRnviLw9oewm8gkAghLtnvjPsWsffcATOraA1YaBT+L07/IP2Erxrt8+dbfHM1sIf3EBI7N277SIKh4TJvJAChYn8kLhCs24HusC0JWG7eWAplT3IN9za69rfedm/xja99W6zY981BLMHNNvpekr7F8DDfOtKj3zvbCDt4jk7Lg5O30n25bkGIQ3osiikMs23x5KTfwMAAP//B/dbSSUKAAA=",
      "kubeletMonitorSystemdService": "H4sIAAAAAAAA/zSOQUvDQBCF7/MrFjy3acWDlz1UjFQQKklFMOQw3UzN0M2s7Exq8++Fxt6+gXnvfc2HsLXwTBoy/xgn8ehmdtajudBTOKk7jQeKZK4njNY7lM5lUsNs6vjohKijDjZHo+z/f5dK+cyBoKlnaKGUM+ckA4n5bbl522+/3nfV3q9X9w+PUM2FHuMvTno7awp+vYKKBmS5DpQXNj+RQnmhUF8jxai5iClgLA4sxWy5GJKwpbzU/uYPzauoYYwtfKIYdU+TH8ZovBiV8tIwf5PBXbl7gb8AAAD//3MkF98aAQAA",
      "kubeletSystemdService": "H4sIAAAAAAAA/3SPwU4CMRCG730KQrgujdFrDwLFEAgQVuIBCZntjjKhtNiZImh8d4OCenFOk8n/fZl/MQ8kS9VDdol2QjGYYa7Qo6huDDWdLlOQtT0QCxudOWkfHXhdUdCbc3SGL5kSsqmj22BqM6Y9OVRqUX5vSzVDFkhiwL/CkZUNe0oxbDFInzwajeJ0jU+Qvfxoy+wcMtsDSSkgmc3VzbWyB3TlyTVNaL7eqIDXDR13ouEtJ9QuBgEKmPiiavP6l/unReNRNc5TFCHWWHio0LNptt6H844d2fvVeNKzq9Ftx47Kj+YfoHUJdCfj/uBOLQaBBbxfqgcIgnXnaLbZCxWZMbUF0jOK+gwAAP//xbtnxXwBAAA=",
      "provisionConfigs": "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",
      "provisionInstalls": "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",
      "provisionScript": "H4sIAAAAAAAA/7RXbW/bvhF/z09xf9XIA/6VHXdbkKJwAdVWGi2O7cl2uq0IBFk62URkUiGpPDTJdx8oWYpsK43bbe/E0z387u7HI/nuj9aMstbMlwtiu6536vRt75s16Z55E+fCHk4nnWMgRKIC857QCL6DGUGLJ6rl/0gFtgLOlE8ZCtlKBL+lknLWDPgyiVEhXH0CtUBGAPCeKjgiESUEgwWHxkHoKzx83zhYcKmYv8TD9yCVL1SQSsWXMhA0UfD5cxZrSUjEBVCgDBoHEm+gDX85Pjo6/AQhJwA5MPkWME/yVATYlIsKMoC5wATM0xvYf3dm90e2O7aHp/u/4GxvD2YC/WsCENECToOCiTcZzLVoWSWOdUliiZlExogJtHPrkDMkEkMwKRitCqBWaOwOieRfv2AQcBbReSrQSwQKvEmppAolIXc+VV7EhRfRGPN02m/6pUwqP46lrs7TU5HzjqAqxoQgk6lAa3TxbzBuj5p/a7YNgrd+DEbjwE+WP0BzF8zw0CC/iTXP/Pegvtjmm+TPe2JPuj1vZNuu17XdSadxkPP9cV3unDpda2KPn+EJglSBGe5/39d768OL4CoTtF8E7zNB4+BgMOzZnjPo2f+EP6F9eHhYiXpu/6su6Mh1Lq2JrX//z4KuxgJRdIneEpWgARjdgkhWuKRsKlEYEGzJNmxi9FmadIsShwYEWjStiAhArdHX0bQn6C0KWRq9iLQRIZdnPa8//DrOxtvImpx1Kn29XYTminHl4ConXWPLtLKXt9FU8DpLf45yO49cTgBOp/2+5wzGE6vf91z7H1PHtXudyNdTYTUaNIrv0Hh0xt7lWe8ZOh1QIkW42pon7ZPjYvjU+9V22fQtfE6/TAeTqefafdsa25lvo33SPPqrUXVPI/ATBTGVCsyiTBjCUz4094OF4OxhvwKnngvdTK9ChFywbWFn271Qx8oqz6+SwnCsQTdWiQzH3sC6sKvgaxxbaUhVr3CcrzZ8/tGBxmnfmnQtd9vpmstVOS747MGAyoLUqrkpC0o1vajENRk0Hi+s8cR2Pb3NnuHqSp8q+tcPaDx2h+OL4dibus5zNcEgpp7iPO4YIQ+uURia7ht5O3lAWwVhGV0voFFYZzhIndEA1R0X16M4nVNWWq9J6w3P0xnGqCwW6q9AxaXx1p+dS/8KVdxRt2inO+q+SijBWUknwVmW8zpVBfoKNagLn9EIpepRPbnqxOS/7Fv9HtFd2RiXhegNqpSOa/pfuh9jIFDJiveVJO///ymhjWSKybZm4OKS3660RfmtYdV0spczfdXLfLVJ3xLB+Uk13/MT+Zpid+BUh9PA2ancNb6sMOSsDJqvNjW/CZpTKjcx4G5dkDdkM6k8/dX+KfJfLWtV/85Twfy4UF0td0qMRqBPT33DmSuExuP59IvtDuyJPfYubXfsDAfP0G62j3++N/v+DOMBD/U5iBuS6l355+SqdZ2zBcvvwl1dyU6kPn0Fj0exz7As3bq4fEVE0Lr1RUukrCVwxrkys9uwwBBexeRiEvsB5u12GFWayBui6o2/7mRaEQcrq/LIE8sMF6qg5euLS6KammDNsPXxY4KC8pAGv3csjlIxRytRhj7nvTkqL9ES8BM/WOAHM1U0lrCXUbLQSBP9dtNjIWW+UshCDL00mQs/REJ+oYpK+AF6lEVcl1BruSslA4zcLLu46HOtfKeCGYAhF6kK+R0DU0Ab9oyXy9Kb6YPOdOmL629Wn7L03pojU5CyBY9D2MtLvn7/2sFlK5WiFdNZ2R75IBUuw2bo0/ghc7tL3PJ5bHTHNkSUUbnAEGQaBChllMbxg/GT9zOysP71vLwOqQAzqX/P6E4qngaLnR/2JJHgp/fR3R18rtiUimYimzGfwx4hq4c/eWcPT8l/AgAA//8xA0Y/bxAAAA==",
      "provisionSource": "H4sIAAAAAAAA/9SZbVPjOBLH3/tT9Hh8JJldxQkPd1OkTE12MLfUckABM/MCGJewlUSFY3kkOcBCvvuV5OfEAyF3+zC8oBKr3er+9V9S23n7xr6hkX2DxcQwTs4dqy0Yl4A42ET69jvESUiwIPAEY3x3C60plv6kbfV+Bvtr+3DfaXffdTqW/TPgDjxCzGkkQbIkjglv48vNa8CXW9edAZB7KmHe6hiffvl0fPHJOzn3jof/cR0z/W4aB0fDi4/Ds3Igu2Aa++4vh8PjciD9bhp0BG+A+BMGpvVYdzsH63HBobpU9zQ3VVacxIC+KRcn53NzAHJCIgNgDRbe0eFv7uuBjKjK5PISdATgOA3pmHB9XYSWjZ25R+7w3HWsdihuvDw2xAEJ7XT/5ONv7pljJ4LrGgfMvyU8n6vuRM/af9/tbddmIvexIvDv00/e/mdne6fXfd/r9jYNEgqyPNx/393udXvbavLqkHt+kUYRMh+HdjSjAcXG6dnh5+GF6x2eOlYb2jQGdMMBbQMOAg5iwu6AyEkPnp6gaQz/nnDS6xQVPGXQugp+uurW/rU6qUpUxm0tFRSBaZVzlxLwofW11VEg+lUEtTAnTMgITwkg2qlkWdoYw9ML7+Pw46+ut3945tgzzG0f+xNi41jamPsTOiPCNgyfRSM6TjjxYk44+ZZQQSUR7Q48GgA09kaM32EeeDGWE8eOOfNt8SDsiEibxrNtuzSp2wsiJY3GjhkR2VWW3XLQ6ZkGgHgQvgw9FYGjhZ1e6KoLypfila0KF8yvfcsE63EhonnBB9IV2Ie9ZSMDYERTl6XDmlkW7VxNUYmr6l6QABCFlv21MSPLDloLN6fTzg0Dx3KK+e2X4RGNkvvhmEQyA3yHqVQ+PBxLL2T+rTAAOJH8wZ8G0N/swQ5s7gCOJVIewOrDHQ6VF6y8wNOTji1bS329fCYsDGqrR8NRq/xfKaewZp5E37/hvf6SJpFHlUWuvlIiHKs/SLMQISGxY20OQNIpYYl0rK0BiAkdSdjYWPig0DAOFGgEVluQb9AHK3PZGUDA9MSZI7CKD48f5srHDSf4Nk8+TR8sCoh8K7xAPZ1MHu498RNJArgyrQ9XprpJ+RaFFScy4RH0cwrpBpP+6QzBKrPNRrS2AhbprejZWeYFRS9inpBYih8V5/8GqgJiTKQnMb/BYZixkJh7z/FIjTWPhIeOtZ1zN63Hyr3zHKrZiKdiWUGEOSD5+0gPq1lewlPx8ipEeQn+2QM/4SGgkTg/Akt/ZMXs6xMlWoL4JiQvC2xEQ6K395LoAGY4pAGWlEUe5mPhWDsVyqsRXqJr5TOBteD+j1BhjnirGXEeS2HvT6YsgJ/uG4ZWwV9s5eruV0E3AGI8I4FjM3U4q4bC9kOWBIhGVCJlKbrawoDsADvQjWLuQx1belxhzJD0VitJ4a711j05aFVKlFfEWLEYtVJUCtHMrrpnZieraasQ7MCsFUBLroxqby/NtAq8ODvzQ3VCQwKjRBAOuvMJ6Y0dxLdj1fjdlpdUKxRSIUXlekOTpAf37IDM7CgJQ9jc2+gX/HR4rS+YqvZBA88bYDZSxzbowFpGSWKrlIwKXC3WJA6wXNRMX1VQWaSjHktknEjHltNYxYfGRKJ0qMuSFU+Axnaj6J+zp5KDs5PjC/d434lYRCNJOPYlnaXlVBQBoaJrBIQBoRHjPtEXAzLSdlmAgEaAHoBGQua72Rto54Np9JonPIEkBKylfIu2WLWA7csv7vVu913nqX1J3GvOu+86ltmBjY1Maz6WTT6WN5dmw7WlnpV2Z0na9XZgIfFKW5ArIWB3UcjwCk1WvQEYGAD6qUbd4ijlxImYBGDVngPUM0wl9rUEMyhry2A/vh3v7p7Eah8Xu7tOVQosDCBPR4nAVN2Gufq2ojPpD6p8K5vIoIY5ZnGwkFz2UXk15obSrZfJcB22a6JKlwtVufcruQ8WlYDQiN6jKRWCRmPl0csFkcWsFtKryGkMCtKgcQPONqDliTI4K6zzwQv7RZFjkcKyXswFwZiAUMRQdgfixGfTKYkCoQSk9FNZKitX8//WP39n92yo1p/dWKcHRXmUvPhgslSb72NffobJ54oTPl48tTZ7Nf5bvZJ/fzPvSWLs3+Ix0bQ/FHhpdmBSIQHlwZAgPwGs7K4arhWq9kzlXnf2veb8q56BGtOK6n8o0myQz8oSapDRkpSel1OmnVTeEVnxXMsy1ZrJ0mhWTkCFkuqY4+C7bU/VprH5UQYoM/ihWqDibY6YsLsJC4PFxqiambp5sUNqQLNinwRXRq39afJUEd4K5n9Wz1RjUpFUEmEpSRSQ4DlBrS+M4rV1OVERxuIS/QMxNMxegSAehCRTX4YeJ0JiLl9zKoKY+RGekvRFyjrvkYrpIcBkyiLEier6XjLOYgUrC+CvehVV0hOSxT8EOhXo34FbKrnVnlhKbOuzUrkjlHL4q9KeES4oi7xx8cguiZBgWm39I9sIWv8QV1ELTOuDCU+Q/Xb3GZ5gQtSjUAT9jpn+vNY3jbnx9lf36NQ9O3dPDoz/BgAA//+IMioOBx0AAA=="
    },
    "clusterKeyVaultName": "",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "customCloudAuthenticationMethod": "client_secret",
    "customCloudIdentifySystem": "azure_ad",
    "enableHostsConfigAgent": false,
    "enableTelemetry": false,
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerCertificates": [
      "[parameters('etcdPeerCertificate0')]"
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdPeerPrivateKeys": [
      "[parameters('etcdPeerPrivateKey0')]"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "excludeMasterFromStandardLB": "true",
    "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', parameters('fqdnEndpointSuffix'))]",
    "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "loadBalancerSku": "Standard",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', parameters('nameSuffix'))]",
    "masterCount": 1,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdMetricURLs": [
      "[concat('http://', variables('masterPrivateIpAddrs')[0], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[1], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[2], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[3], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[4], ':2480')]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "mrespoke1",
    "masterLbBackendPoolName": "[concat(parameters('orchestratorName'), '-master-pool-', parameters('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(parameters('orchestratorName'), '-master-lbFrontEnd-', parameters('nameSuffix'))]",
    "masterLbName": "[concat(parameters('orchestratorName'), '-master-lb-', parameters('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(parameters('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', parameters('nameSuffix'))]",
    "masterVMNamePrefix": "k8s-master-17306082-",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "maxVMsPerPool": 100,
    "maximumLoadBalancerRuleCount": 250,
    "networkContributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
    "nodepool1AvailabilitySet": "[concat('nodepool1-availabilitySet-', parameters('nameSuffix'))]",
    "nodepool1Count": "[parameters('nodepool1Count')]",
    "nodepool1Index": 0,
    "nodepool1Offset": "[parameters('nodepool1Offset')]",
    "nodepool1SubnetName": "[parameters('nodepool1VnetSubnetID')]",
    "nodepool1SubnetResourceGroup": "[split(variables('nodepool1VnetSubnetID'), '/')[4]]",
    "nodepool1VMNamePrefix": "k8s-nodepool1-17306082-",
    "nodepool1VMSize": "[parameters('nodepool1VMSize')]",
    "nodepool1Vnet": "[split(variables('nodepool1VnetSubnetID'), '/')[8]]",
    "nodepool1VnetParts": "[split(parameters('nodepool1VnetSubnetID'),'/subnets/')]",
    "nodepool1VnetSubnetID": "[parameters('nodepool1VnetSubnetID')]",
    "nodepool1osImageName": "[parameters('nodepool1osImageName')]",
    "nodepool1osImageOffer": "[parameters('nodepool1osImageOffer')]",
    "nodepool1osImagePublisher": "[parameters('nodepool1osImagePublisher')]",
    "nodepool1osImageResourceGroup": "[parameters('nodepool1osImageResourceGroup')]",
    "nodepool1osImageSKU": "[parameters('nodepool1osImageSKU')]",
    "nodepool1osImageVersion": "[parameters('nodepool1osImageVersion')]",
    "nodepool2AvailabilitySet": "[concat('nodepool2-availabilitySet-', parameters('nameSuffix'))]",
    "nodepool2Count": "[parameters('nodepool2Count')]",
    "nodepool2Index": 1,
    "nodepool2Offset": "[parameters('nodepool2Offset')]",
    "nodepool2SubnetName": "[parameters('nodepool2VnetSubnetID')]",
    "nodepool2SubnetResourceGroup": "[split(variables('nodepool2VnetSubnetID'), '/')[4]]",
    "nodepool2VMNamePrefix": "k8s-nodepool2-17306082-",
    "nodepool2VMSize": "[parameters('nodepool2VMSize')]",
    "nodepool2Vnet": "[split(variables('nodepool2VnetSubnetID'), '/')[8]]",
    "nodepool2VnetParts": "[split(parameters('nodepool2VnetSubnetID'),'/subnets/')]",
    "nodepool2VnetSubnetID": "[parameters('nodepool2VnetSubnetID')]",
    "nodepool2osImageName": "[parameters('nodepool2osImageName')]",
    "nodepool2osImageOffer": "[parameters('nodepool2osImageOffer')]",
    "nodepool2osImagePublisher": "[parameters('nodepool2osImagePublisher')]",
    "nodepool2osImageResourceGroup": "[parameters('nodepool2osImageResourceGroup')]",
    "nodepool2osImageSKU": "[parameters('nodepool2osImageSKU')]",
    "nodepool2osImageVersion": "[parameters('nodepool2osImageVersion')]",
    "nodepool3AvailabilitySet": "[concat('nodepool3-availabilitySet-', parameters('nameSuffix'))]",
    "nodepool3Count": "[parameters('nodepool3Count')]",
    "nodepool3Index": 2,
    "nodepool3Offset": "[parameters('nodepool3Offset')]",
    "nodepool3SubnetName": "[parameters('nodepool3VnetSubnetID')]",
    "nodepool3SubnetResourceGroup": "[split(variables('nodepool3VnetSubnetID'), '/')[4]]",
    "nodepool3VMNamePrefix": "k8s-nodepool3-17306082-",
    "nodepool3VMSize": "[parameters('nodepool3VMSize')]",
    "nodepool3Vnet": "[split(variables('nodepool3VnetSubnetID'), '/')[8]]",
    "nodepool3VnetParts": "[split(parameters('nodepool3VnetSubnetID'),'/subnets/')]",
    "nodepool3VnetSubnetID": "[parameters('nodepool3VnetSubnetID')]",
    "nodepool3osImageName": "[parameters('nodepool3osImageName')]",
    "nodepool3osImageOffer": "[parameters('nodepool3osImageOffer')]",
    "nodepool3osImagePublisher": "[parameters('nodepool3osImagePublisher')]",
    "nodepool3osImageResourceGroup": "[parameters('nodepool3osImageResourceGroup')]",
    "nodepool3osImageSKU": "[parameters('nodepool3osImageSKU')]",
    "nodepool3osImageVersion": "[parameters('nodepool3osImageVersion')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorNameVersionTag": "Kubernetes:1.18.19",
    "primaryAvailabilitySetName": "[concat('nodepool1-availabilitySet-',parameters('nameSuffix'))]",
    "primaryScaleSetName": "",
    "provisionScriptParametersCommon": "[concat('ADMINUSER=mremini APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' AUTHENTICATION_METHOD=client_secret CLOUDPROVIDER_BACKOFF=true CLOUDPROVIDER_BACKOFF_DURATION=5 CLOUDPROVIDER_BACKOFF_EXPONENT=0 CLOUDPROVIDER_BACKOFF_JITTER=0 CLOUDPROVIDER_BACKOFF_MODE=v2 CLOUDPROVIDER_BACKOFF_RETRIES=6 CLOUDPROVIDER_RATELIMIT=true CLOUDPROVIDER_RATELIMIT_BUCKET=300 CLOUDPROVIDER_RATELIMIT_BUCKET_WRITE=300 CLOUDPROVIDER_RATELIMIT_QPS=30 CLOUDPROVIDER_RATELIMIT_QPS_WRITE=30 CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/cni-plugins/v0.9.1/binaries/cni-plugins-linux-amd64-v0.9.1.tgz CONTAINERD_DOWNLOAD_URL_BASE=https://storage.googleapis.com/cri-containerd-release/ CONTAINERD_VERSION=1.4.4 CONTAINER_RUNTIME=docker CUSTOM_HYPERKUBE_IMAGE= ENABLE_MULTIPLE_STANDARD_LOAD_BALANCERS=false ETCD_DOWNLOAD_URL=mcr.microsoft.com/oss/etcd-io/ ETCD_VERSION=3.3.22 EXCLUDE_MASTER_FROM_STANDARD_LB=true HYPERKUBE_URL=mcr.microsoft.com/ IDENTITY_SYSTEM=azure_ad IS_IPV6_ENABLED=false KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' KUBERNETES_VERSION=1.18.19 KUBE_BINARY_URL= LOAD_BALANCER_DISABLE_OUTBOUND_SNAT=false LOAD_BALANCER_SKU=Standard LOCATION=',variables('location'),' MAXIMUM_LOADBALANCER_RULE_COUNT=250 MOBY_VERSION=19.03.14 MS_APT_REPO=https://packages.microsoft.com NETWORK_API_VERSION=2018-08-01 NETWORK_MODE=transparent NETWORK_PLUGIN=azure NETWORK_POLICY=calico NETWORK_SECURITY_GROUP=k8s-master-17306082-nsg PRIMARY_AVAILABILITY_SET=nodepool1-availabilitySet-17306082 PRIMARY_SCALE_SET= RESOURCE_GROUP=',variables('resourceGroup'),' ROUTE_TABLE=k8s-master-17306082-routetable SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),'',variables('servicePrincipalClientSecret'),'',variables('singleQuote'),' SUBNET=mre_az_spoke1_useast_k8s_1 SUBSCRIPTION_ID=',variables('subscriptionId'),' TAGS= TENANT_ID=',variables('tenantID'),' USE_INSTANCE_METADATA=true USE_MANAGED_IDENTITY_EXTENSION=true VIRTUAL_NETWORK=mre_az_spoke1_useast VIRTUAL_NETWORK_RESOURCE_GROUP=cloudteam_mremini_spokes VM_TYPE=standard VNET_CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/azure-cni/v1.2.7/binaries/azure-vnet-cni-linux-amd64-v1.2.7.tgz ')]",
    "provisionScriptParametersMaster": "[concat('COSMOS_URI= MASTER_VM_NAME=',variables('masterVMNames')[variables('masterOffset')],' ETCD_PEER_URL=',variables('masterEtcdPeerURLs')[variables('masterOffset')],' ETCD_CLIENT_URL=',variables('masterEtcdClientURLs')[variables('masterOffset')],' MASTER_NODE=true NO_OUTBOUND=false AUDITD_ENABLED=false CLUSTER_AUTOSCALER_ADDON=false APISERVER_PRIVATE_KEY=',parameters('apiServerPrivateKey'),' CA_CERTIFICATE=',parameters('caCertificate'),' CA_PRIVATE_KEY=',parameters('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',parameters('kubeConfigCertificate'),' KUBECONFIG_KEY=',parameters('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',parameters('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',parameters('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',parameters('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',parameters('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ENABLE_AGGREGATED_APIS=',string(parameters('enableAggregatedAPIs')),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "msi",
    "servicePrincipalClientSecret": "msi",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "storageAccountBaseName": "",
    "storageAccountPrefixes": [],
    "subnetName": "mre_az_spoke1_useast_k8s_1",
    "subscriptionId": "[subscription().subscriptionId]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "true",
    "userAssignedClientID": "",
    "userAssignedID": "",
    "userAssignedIDReference": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedID'))]",
    "virtualNetworkName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetNameResourceSegmentIndex')]]",
    "virtualNetworkResourceGroupName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetResourceGroupNameResourceSegmentIndex')]]",
    "vmType": "standard",
    "vnetNameResourceSegmentIndex": 8,
    "vnetResourceGroupNameResourceSegmentIndex": 4,
    "vnetSubnetID": "[parameters('masterVnetSubnetID')]",
    "windowsCSIProxyURL": "",
    "windowsEnableCSIProxy": false,
    "windowsPauseImageURL": "",
    "windowsProvisioningScriptsPackageURL": ""
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('agentPublicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('agentLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('agentLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "outboundRules": [
          {
            "name": "LBOutboundRule",
            "properties": {
              "allocatedOutboundPorts": 0,
              "backendAddressPool": {
                "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
              },
              "enableTcpReset": true,
              "frontendIPConfigurations": [
                {
                  "id": "[variables('agentLbIPConfigID')]"
                }
              ],
              "idleTimeoutInMinutes": 30,
              "protocol": "All"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('nodepool1Count'), variables('nodepool1Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool1VMNamePrefix'), 'nic-', copyIndex(variables('nodepool1Offset')))]",
      "properties": {
        "enableAcceleratedNetworking": false,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                }
              ],
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool1VnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        }
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('nodepool1AvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool1Count'), variables('nodepool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nodepool1VMNamePrefix'), 'nic-', copyIndex(variables('nodepool1Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('nodepool1AvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('nodepool1AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('nodepool1VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nodepool1VMNamePrefix'), 'nic-', copyIndex(variables('nodepool1Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=nodepool1,storageprofile=managed,storagetier=Standard_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    ifconfig eth0 mtu 1500 up\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": null,
          "imageReference": {
            "offer": "[variables('nodepool1osImageOffer')]",
            "publisher": "[variables('nodepool1osImagePublisher')]",
            "sku": "[variables('nodepool1osImageSKU')]",
            "version": "[variables('nodepool1osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "nodepool1",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('nodepool1Count'), variables('nodepool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool1Count'), variables('nodepool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')),'/cse', '-agent-', copyIndex(variables('nodepool1Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool1Count'), variables('nodepool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool1VMNamePrefix'), copyIndex(variables('nodepool1Offset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('nodepool2Count'), variables('nodepool2Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool2VMNamePrefix'), 'nic-', copyIndex(variables('nodepool2Offset')))]",
      "properties": {
        "enableAcceleratedNetworking": false,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                }
              ],
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool2VnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        }
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('nodepool2AvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool2Count'), variables('nodepool2Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nodepool2VMNamePrefix'), 'nic-', copyIndex(variables('nodepool2Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('nodepool2AvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('nodepool2AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('nodepool2VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nodepool2VMNamePrefix'), 'nic-', copyIndex(variables('nodepool2Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=nodepool2,storageprofile=managed,storagetier=Standard_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    ifconfig eth0 mtu 1500 up\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": null,
          "imageReference": {
            "offer": "[variables('nodepool2osImageOffer')]",
            "publisher": "[variables('nodepool2osImagePublisher')]",
            "sku": "[variables('nodepool2osImageSKU')]",
            "version": "[variables('nodepool2osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "nodepool2",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('nodepool2Count'), variables('nodepool2Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool2Count'), variables('nodepool2Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')),'/cse', '-agent-', copyIndex(variables('nodepool2Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool2Count'), variables('nodepool2Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool2VMNamePrefix'), copyIndex(variables('nodepool2Offset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('nodepool3Count'), variables('nodepool3Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool3VMNamePrefix'), 'nic-', copyIndex(variables('nodepool3Offset')))]",
      "properties": {
        "enableAcceleratedNetworking": false,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                }
              ],
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nodepool3VnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        }
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('nodepool3AvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool3Count'), variables('nodepool3Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nodepool3VMNamePrefix'), 'nic-', copyIndex(variables('nodepool3Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('nodepool3AvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('nodepool3AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('nodepool3VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nodepool3VMNamePrefix'), 'nic-', copyIndex(variables('nodepool3Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=nodepool3,storageprofile=managed,storagetier=Standard_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    ifconfig eth0 mtu 1500 up\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": null,
          "imageReference": {
            "offer": "[variables('nodepool3osImageOffer')]",
            "publisher": "[variables('nodepool3osImagePublisher')]",
            "sku": "[variables('nodepool3osImageSKU')]",
            "version": "[variables('nodepool3osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "nodepool3",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('nodepool3Count'), variables('nodepool3Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool3Count'), variables('nodepool3Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')),'/cse', '-agent-', copyIndex(variables('nodepool3Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('nodepool3Count'), variables('nodepool3Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('nodepool3VMNamePrefix'), copyIndex(variables('nodepool3Offset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": null,
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": null,
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('masterLbName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                }
              ],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        }
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterFqdnPrefix')]"
        },
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "[concat('SSH-', variables('masterVMNamePrefix'), 0)]",
            "properties": {
              "backendPort": 22,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 22,
              "protocol": "Tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBRuleUDP",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 1123,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 1123,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Udp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": 443,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2_v3"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n\n- path: /etc/systemd/system/etcd-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdMonitorSystemdService,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n      \n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n      \n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5STyW7bQAyG73oKIj3LalDk0LmlWVqjsC2gy7WgR7RDeBZ1hlKgty80srwEiZyepOGQH3/+lLDm3xQie6egvc527CoFpa8yS4IVCqoMwKElBbtmTTlWlXe5RYdbCvurWKMe72MXhWwG0J5QAQyuycSeBYB1/Sos1qT7jDqwDyzdncEYl6n1QM2dryjXgYU1mgzgyUdZkjz7sFMgoaEMQHsnyI5C6pZPaQdgi1tSYHWYWdbBR7+Rmfa28DEWfU1wJDS8nper9vPsevbpSCkbY0pvWHcK5pullzJQJCcpg1w7zD7q+f7ry8Pdavk4/5rCAC2ahhRcFS2GwvA6tTQk6am92/D26oxwe3+/Wv4pb39+e0kg0afak+xYsGMZCIGib4Km/Tr6wN+GohzOALpuFNzYw9mS9aFTcPNxwSnYetNYWvjGjWWjrqHdvtL2CSXKk4IJWQcZWK2c6Q6rPEJt5FeIo1XPiFtyUizSaqp5RU5YuvwHibDbxsv8FkNueJ3vTZ/odZ4xgSTR+XHci368BRyMPvuWTxzuf4CE25fX77D6padvMP7D3CkXL9CPqRO+vWvK7MPD6jH7FwAA//+80EWUzwQAAA==\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5xWbY/aRhD+zq+w0q8sPrjLG6orEUJzkS4XeqRJq6pCw+5gtqx33N0xOfLrq7UxmNc79U5CsPM8z4znZT2Q66/ovCbbj1bd1lJb1Y/GpFoZMihg6LeiyEKG/WhZzFBArj26FbrNsc9B1ja/9oxZK4oMzND4wIwi1uj6kSTLjozIDVgszyVlOVm0fCTsc5SBmztNTvN6aMD7+zKEyoOwpFBIp1lLMK0oWpDne+Tv5Jb9iF0RPASPoC26TRzi3FOEP51Biv0ok66TaenI05w7krKYvI8Dw1lkrL7uyP1Vt9N90+m+baqMC2PGZLRc96OP83visUOPljcYSVkGIcd/vdgXe/H3BgEu9cEsBKgVOtYeBSjl0Pvk5+3RQCn3y4t2FGDG0HeRO73SBlNUScjAxmTJrjMqvICCF8kcjK8thdIsDKUig0dIMbm+OmGYgVwWedI9ZfP6BybdqyNTDrxI4hW42FBaZqy0xeVnx1DaJORlpsRcG0xiZNlMNihF1sdNYGcNman5vCCnfwBrsiIjhck9KWw/vBsMK8RMW7XN3FWn/K8s0mi0LCScdizRsY8ldKTjmkCFEpLsXKfHcf4oHHb+8WSb4NzRSit0SWmuLGhhZkI1M+3DyIncFKm2PrmvJ+lOz1GupcH2nc40P4BN0bUn6FZa4kBKKiy33+McCsMTJgcpluNRn30hg65MyQQlWeXbX8FoBaxtOqjdfsPZgmjZfkBPhZP4W0EM7dEjo1Wo6tOdVHtMaoKyCMNYtfbe48yI2LODXDAt0VattutBZKmEhGdmukKj4wv4gKlKeMBb4vp5tCWuG7RqAH2yYM59P467vddlt3T7vevXbyugtj5kAEVOjpNNHwUXBnnbT2E051oCn33Sg6gPBJa4vkzcxp07mmujbdqc6dzR47oZzKX2LsG7SPa4Szwzkk3qNhaH/xboeYGg0FW3ESpRvhySU4hnTd8mnkZn7IvgIzsQ1Q8vcodz/Zj8IR4wI0YxKq2neKmjIq95O8KHcHwKX3h04VGOKb97dBWj2Rk3N9f1YTmzAqqhfSqn2/fALq+HCoYoXMa7yaoB0hSe0QmdCxcujKS7ue3i7qsNsroqRLjP0aoktP0mTjb+yV7ZBbetRknT+QKd8IVm9MmXu8l0NHx/O5o+TAbTbx+/3E6Ht4Ph7aB3NR1/vvuze331sr0DjYbvnwPbag1Gk2m392b6YfhpOrkd9F6+Oi12Eben1nv5qkZdv7k5r3YWdxTb8N0woC4Hdgw6iupJnQZoV46wAQDj/+i0VXKzXT9WZIoMP4WO22xOze0JWYqd4tYcRVkgjIEX/ejA7UkN703ZdZckvDfxPqZWWIETRs/q6/OMRrmC6Fl8iKpVMq+fYH4HSNFy/AkspKg+KrSseS0myOGF2gzeIajP1qy3++e+L09yecYZ5cehlTuPofRSfM3lqlXX7WDZPVmusC2XQlv1/GzdLtXsos5+8S4X7qzQqQoeV+9J+rPKeKJSZ4Xrkp0p1+WA9ur20+jzr63/AgAA///bPaRbhA0AAA==\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xVTW/jRgy9+1cMciwykh3sAq0AnRY9BOimBgL0UvRAj2iZ9cxQ4FDaur++GFl27PirOQXhe4+PfCMGOvoDJRHHygyL2ZZiU5klN7OACg0oVDNjIgSszLZfoXUcVdh7FBsgQosy1VMH7gBKu6QYZsZ4WKFPWcIYJZTKTHzbeYg4/t1x6Dhi1NsdUocui3RCLKS7bx5SehtN7VvZyA1aJ6TkwM+M2XDSN9QfLNvKqPS5VRYGiiiTIftwrvxDAVqsTHBSBHLCiddaOA4lp1RmqkRU3P96RaUaFsXi52Lxy6ncsvd+yZ7crjKv6zfWpWDCqBPGcQiQc/jz6Ybq018TFKRNGWcteM8OFKdVUCOpXoNP+PRsnqx1nvsmK62prUtUd+od/u0Fi78Tx1NwJzxQg1KP5UOlT4oy6teLefHyZV7Mi3m5eDmv583WQTB1vMXFeS1RGym21qGoXZPHCz+5kkoHhRO9zt3i7gF1i7uJOs7cC05jCfeK57s57jfVPz2vmDWpQJd7oTwrbzE6jxBR9vg1gma9FrLQb+zAvysLtPgNOnCku9fEHpQ41vntPb+jDOTwjRv89Z88yqGy18v2D8kMIKWn1TiSRy0/anusR2hQLHp0eiIxhh44krLYVsCh7VCIm/rLPO0hHTcWB3LZllUKyL3WX8OxLLwmT7E93Ywwq3Xwf1MaV2slG3bkadzAwcfi0Cjtl2HBOe6j2k5oyO/2QaTQUWaifCSrKIEiKDbjcK2zuhFMG/ZN/XU+n+9RfcKLnk6wwagEPp0scahfjh/WwL4P+D2jp3NxejJQnf1weCwbEzJhCbqpzKcxrmqk5O+Qz6uC0Pwe/e54z87lHIwfFK0pX4FbnvokZb4TvkwbECxvsz61u+g3gFhPKzs91Bv9Pj3nC5WQ6AHzB0CLUcvv4+VrXsfcdGffUZVie8fyIcRP5/5qdvn/xdj4KNfdDPF6gHcVDrD7Yd2UeJTa7HEwN7WvJXSZzkP6w5j+CwAA//8zfliMaQgAAA==\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SSMY/bMAyF9/wKIXMVI51aAZk63XBXAwW6FB0YmXaISKJB0T743xdKXCe9JI0ng+R7fPwg6OknSiZOzozb1ZFS40zNzSqiQgMKbmVMgojOHIc92uwP2AwBZS7nHvzSm7JiXBkTYI8hF6UxSijOeE4qHGwfIOGp7jn2nDDpjXHu0RdtL8RCOn0LkPPbKcJ5g03coPVCSh7CypgDZ31DfWc5OqMylA1lI1BCmXPYR1eUjyJ06Ez0sonkhTO3uvEcK865KgpJqHj+vYjduN1sv2y2X69d6iGEmgP5yZmX9o21FsyYdJ7xHCMUxr/W/5qtf88TIF0ubWvLgOfUUrerRpAq0P6UIKBWl976k1lbGxAaFIsBve4KgnO5F24pUOp2LYQ8F8fd52XbyGGI+MpD0hnUNSxUby/nL21jYhHUoAdnKlRf3Rn66zGC2EB7Oyd/YPLhvhuXmOmJ8h2gw6TVKyTosHlpMCnpZH+gKqXuOr0gNN9TmJbHcqbw4aXcPb48tdPixa5/SOH/BB463UNxi+Gp/CmPPwEAAP//gV/tf/sDAAA=\n\n\n\n\n\n- path: /etc/kubernetes/addons/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5ySy07rQAyG93kKK8uj01bsUF6ADSAUBBvEwp2Y1GoyHsae0L49yqWlrQCJ7Oby+/fnCwZ+pqgsvgBMFdtye61LllV3lW3ZVwU8SMNun0nL9mhYkxYZwAJKek+kVpIj7qjKYmoOXw111BRfCg3ilTIAgEgqKbpR2WvrKCkUkOfD/VQAL3mQSvPXU887MqzQcKbZqpE6/w/jWQ0tXfjfix9Bk1IcwnSvRm2xTWtahCi7/RAA0FFcD4IPNLeZHv9GRL4Kwt60R1KKHTv6jeemNzuFwmQb8sYOjaoJwYsvpyRP5e0RZIWB/x3O3Tjxb4Y1owon/o3rFoMeCLAlDTh9D40bec9Lm59RyUUynW13vNPOyPed0B937Hztx+jL1f8MAAD//62kjQpEAwAA\n\n- path: /etc/kubernetes/addons/azure-cloud-provider.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9SVT4/aPBDG7/4UFpdcXvOqtyq3dg+99J9A6mW1qib2EFwSO/KMI7GfvrLNLoWNEGgL2t4ihxk/z2+eDEopAYP9gYGsd7UMDeg5RF77YB+BrXfzzXuaW///+E5srDO1vOsiMYaF71D0yGCAoRZSdtBgR+lJyk1sMDhkzKW6VCjCMFqNtZxxiDgTUjrosZa0Jca+hscYUOnOR6OG4EdrMIgQO6RaKAmD/RR8HKiW97PZg5AyIPkYNOYTHNEx5fMRQ5N1KKkDAmN+HID1Oj/FwaTD11n/aJ2xrr0FAd/hAlep7RODE2KFlC/HdM41FJtfqDmzLh2WRewHrX10/Nxksrq8pAGSueRdlbteSfkA74SHIbUlRsdq9F3sUTXWFT2XD2MyalV1HLWKUAdkqvZZS3fI+6pFrv6rSuaqhysE7OoE9lGbCtF58btE5NmhO2Hz+sG7ynetSoxUi8wX7Lld+I4XXYv8ryy0Y+M3WW9Hl95o2RH7AC3usTfI8MR+WV7edUA08ZUbXEHskhJwznOGsBvFrq1OlfPUcn44HEtqV63yb/6YzuUTza6THQz1UUmBYyxtxAABemQMtF8eX8BBi0Y8C4YCl7cDJvvgDATz8/NiKaTUoNfWtb03WMsFgvnmuu1fBdoXOWoI2NvYvwT7dth8LxJvjoZ2M3nLbM7OzYTzk7wmuGShK1v+/K4OJF90CIQ28WtWcuD6dwAAAP//NH/WfLULAAA=\n\n- path: /etc/kubernetes/addons/blobfuse-flexvolume.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/6SUQW/7NgzF7/4UQoEdHaeHAYVuw9pDgbUIlnV3RmYcIZSoiVQQf/vBcdLaSVsU+OtI8v2ixxcZkv8Xs3iO1kBK0hzuq72PrTWPgIHjGrUKqNCCgq2MiRDQmg3xZlsE6y3h8cBU+ygKRJjPI5LAoTX7ssFaelEMlTEEGyQZKMbsH6SGlD5QY7VsMEdUlIXnxlERxVwL5oMfcHeaC95VktANlJJaUFxrBsWuH7naJ7TmbybysXs7DZzqeVoZR40JcHyLcABPsCG05vflb5UxgoROOY9TAdTt/prc/HoHlTGKIdE7d7qu4dBM/Il8PD/zPs5CjKygnuOEe5FAURYHhHkxZ7anRAW1TtzOiJeNDidlz9lr/yeByOvprmOC9eUHXPbqHdDlMtutj177iUNu8Y+bqjEZ/ys+Y/tYso/d2u2wLUMqz13k9/LTEV0ZrE2VI3N9TuYfzEHm7XoM6umYMorMF3OZ2GNvDXQYNTHTVdsYTphhyN28sj7Hm/4BqOANdgBvCdRBPnccRwUfMb/P1j95NuPxATq0Jri8CN5lFt7qwnFo9g/SnGUlYHONKgHt/WK5eJiTVoVoxeRdb83z9pV1lVEwavURiXDJbu5ryAlFr7y6VIYnEmbFgIFzb839cvniJx3ywf8CYHT0wiVOIZc9HpgSlc5HmaDCMLwC3VnToLrm47/fjLSzpLnFQSbuvkAdIDfE3UU1om6SvULsWEb9BJo+5X1j6RvIT/xNH4z94ivDYg35WI7V/wEAAP//iqrT+wgGAAA=\n\n- path: /etc/kubernetes/addons/calico.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/coredns.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/secrets-store-csi-driver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/ip-masq-agent.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xVwW7jNhC96ysGAXqknGSxxlZAD0U2hwBJGmywvU+osUOY5NDkULWKfnxBydZK3k2721N5Mobz3sw8P2owmN8pJsO+AQwhrbqramd828BHJMf+maRyJNiiYFMBeHTUAP6ZIykTlMO0V7glL8e7FFBTA7v8Qir1SchVABZfyKYCB9DsAnvy8hYLDODoSSjVhlfa5iQUVaLYmcJ9ITHTxZCJbcveocctxXoJc9xSA59Is9fG0pAuhmIDnluqUiBdGsqhRaFniSi07ccWpQ8FytYav/08JAzxOI+MqQAOD589dmgsvlhq4P3lTxVAIktaOI5ZDkW/3s9EANh9SApDeFuERbcAQi7Yqez8HynHLri/i/2Mf1DTexYUw35GdZIfs3DSaL8Suh18kkhU4Hbx75w0LidEw9FIf2MxpcfBRKM9VGlA6WjEaLTH7FdO8kjyB8ddA4XwGC+5zwtpv/YLpwas8flwkpEtxeVUCnbUN3BzLPprcVH6zdt+ouRQMBwbuD2YJGkJHFqObOncc1ik+hbJPk+zAXRo89LH5dBmQ1oaeORn/UpttjQV/UJ0MbbzLdTtgXSWHwSdldLsBY2nOJPqn178eIzDLTXgdKyd0ZETb6TW7Fac0uqLQqsFuumu6/f15ZLkKVv7xNbovoG7zSPLU6Q0L4VxO/NmaU8p8uXlKRO69S8btImm+0Q6D6ZjL3SQOTBE0xlLW2oXBgPo2GZHD5y9nFV6Uwil2W/MVo3QGQbAFZ4nlNcGViR6NWZOKZES56hpUSnSPlNaVgfQIZePi1vSk+PYl/iDmV1Y48wP4a9nBOMUM/R/mXyMP2BYNvFvRJVSqpqvpGkb3ZwIv28bqUno/+FSuvUpRzp+WE6jLB8H/KUGLs/+AdM+U8SWbu4+fpo9zOnH1fpDvX5XX13/XF+tV++ujzsn7e+N392zRnv0eHX0XO/1nReKXblZX6bq7wAAAP//rVNqpQYIAAA=\n\n- path: /etc/kubernetes/addons/kube-proxy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWTW/jNhO++1cQAV7siZK9eAukBHooskGxaJMGG2zvY2psE+bXkkPXRtv/XpCSbcmylRS9VMf5eGaemYekwKvfMETlrGC7xWyrbCPYg7MrtX4CP2uAQMwYk8VSHcBowf6cMcZYP3ObluiD2x+qLnB7Hyvl6t0CtN/AoiS02D+nJb7k0LZICkDK2RIgtUJLD85alNkoipUV9BZXsHoHodZqWWejRqrPzg4jRcLw8PnTF8HuFvPq4//n1bya14uPdyXAuAYFu1OeYKkxtsYVAqWAPwFhPFb946+ZQYLjBCwYbInywpSfimZP9CCP7niIhGbGmIYl6g4PmsZZAxbWGKocFiwSliG1HX3JLKTSODtSPkd0pHjEsFO5zh2FhG3r0hnvLFrqN1c8pDAIZl3TQd5HDt4Pwjjns/4ewftYn2TwCdA4+4o0GMR/n9V4Wbe3FD3KzCWiRkkutLwMkNz80iN6q9B0rxfdJt8A4SsFIFwfWmA6+Dwmp7Wy668loNhD33LswcD+q4UdKJ21K9h38//NGCM0Xp+i+qvKnx6wmO52NN1p4mCto3J8+/jdViGRixL0SBhNUVVE4t41g6XnL8oNNilnlZvjIlcGRUqCblM/fChpxxXmzwflgqLDg4YYn4sK2kXzzIkf84/bcRrDkABnWzy0E+DBabxUNWRyp26dz/kuCPb4LZ1gGduBTjjihqsVShLs2b12LE9Fz0B3j3sVKV7LetyjTPQPk0alCr+HbhA/5gMcf7X6cI1TAT2p3BIoi6E3KumMAducl8+vaYoz3l2WPwxu7zas7j0tpxRlYI2CGRkqo2Rw0a2oks7ULsb6vJEejNgtqsV9tfh+iPGStH5xWsmDYJ9Xz45eAka0dIq6clO0X8DoUpDYk3Y2fksYaWBjTPok2GI+N2cVo0xFhs4S7qkf7oPaKY1rbATL8jhrxulk8Mkl28fnzGTLC9BGsBpJ1jHqWmI4LebMIkbNi4dvXKRB29DkHV9UHGOfRzsCR5L8qvtd4G+82pe7GLneVSQkW+/bZ73STm5H0MdHf+AcYuQmjcsHJtbj1jJ73bn/zQgmpM9YTMs25br7xo8Ib/XzVldZGc9Iv7uwHdjb7N7ZzoGljb52WyYphjpuIGAtoQhOrZSEviom9DiJ/A6Z3BDJJOwNaU8IexLups5uqmwS7qrkbguOd7p4Ai/elsXNi+6qbPKz9zr4E2Kj3zYXBdPKpv3s7wAAAP//9b/cqjwMAAA=\n\n- path: /etc/kubernetes/addons/metrics-server.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/+RXS28bNxC+768gfC4lpXGAYAEf0qRNDCTuwnJyp7ij1dR8dTireFP0vxfch7SrSEaaxomB8iKKQ87j4/CbWRXwA1BE73KxfZLdoitzsQTaooYXWvvacWaBValY5ZkQRq3AxDQT4vZ5lCqEXFhgQh1lBNoCtTJVlt5Z5VQFNLutV0AOGOIM/dz6EnJxDdo7jQYyIZyycERLWo5BachF0iBjExlsJqXMxm7TSumZqnnjCT8pRu9mt89bS7uAXpo6MtC1N/Dw0Yh7PFJVRVApBsleqtKiy8UZUw1n/+YglMhfc26L8HF0roO9QzXfbSzlAACBKoEyqg3EPJNCBXxNvg4tYHLAqbeUCUEQfU0aennwZWwnzpeQZlugVS+rgNtfg7GbfFSsN4/+aieIHSg7BdPZ2RdA08/mkRX3/4fk7/5q79ZYWRUeDMiE4C/oSnTVj3nxMvk3JN3J10/ewDWskz8D0PeElwmxj25nF+4YXAJGqoAj4+AYdXt8cCPWqz9Ac3uvR7nx+5LXD72ffGCKdE0lmMQWnr72Qsbv9pCKpgb+33dwgmy+OegHBh4c9MNm47F1GTGATg4ET9xzbadgw9yScCfKxfn50+4fefbam1zcvCzaFVZUARftruFUBAOaPd0f2yFYKoS4T8ZXEIxvLDy+1mwAbRqlTSXp7ci7+/yLTIqharqd5I1BV70PpWIYDlt1996prUKjVgZysciEYLDB7PaMYUnDTIzfD88QQxraO1bogHZnpVBUjTRJIaUGYlkiXczZhokkgq4JZEqUi/MhUQZhAs4Ay0CwBiIopSpLghglNwHixaVjIKfMZfHTr3e76RsfOaF/VFUdQaZGQqY+oo6t4cnGLl6Z2hFTJ4a4ePIsHlWFrneezX4DWlWldNA0s6jJR7/mmfZ27mOc71NpflA4tovZs9liqqWojSm8Qd3k4nJ95bkgiOD27hrcgoMYC/Ir2AMuxFqhqQluNgRx402Zi6cjaXpor4HHB4QIije5mCeVn6aCyePcj6g3kBL/zc1NsRxJAhD6cpkeSBlz8WQf1ImHsjczSZpdYhU9h5yPYzgkml7JZwSTRmpU8BvjlHQ2/w0odMiozCswqtnB9fPii6CcNMv7xT9riBynDutQp6MLO1m1YD01yd7iHe4kbT4jNy+9Y7jjqXJV/u5Mc+09/4YG+poo0pfSeFvtXsQr79K248L3Eah1aB/N1pvawrtUNCcpYNNK0QE+5o3h+tmGRCr9enrVywmrpjFlbx9zYdDVd708EPo2YKNivBoVe6m7PkBqwtTxmmxAaFzir05ndBfTiBTBBm5eIeXir7+z43F8XtOQoMKW7yct1wpYDaXuRXH5nfuD3v7s4Ot2qApV12p99u3brhc94O/Qoa1tmwhZegsdlS5vMdy8XX4AwnWzy58e9C6YkyxyouC234JDQ9UBt1savOnc+CcAAP//l7P9kukRAAA=\n\n- path: /etc/kubernetes/addons/pod-security-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RVTU8jORC996+w2APSSgmLVqxWfcsGWCHxEWU0XNAcKu1K8MTt8pTthMyvH9lxN+kQUAThMEeXq55fva5XDVbdIztFphSWtKpWJ4vTCXo4LebKyFKMSH7BKrDyq1G6L2r0IMFDWQhhoMZSWFYLpXGGshACjCEPXpFxMUMIh1VFte27DNMHbR+hPw8TZIMeXV/RCWhNS5QjpqnSeAs1ulIc/XlUCKFhgjpjgZRkajAwQ95CqEliKcZYkamUxsJZrGLRM7lSeA4YKcbHRk38wlWgE+FuAsohWJgorbzC9H4vM1qQDnU39EjO36JfEs9blBgbEfucWCtTir9SGzU8leKfs7O/z3La1WjYLbs6b88czMB9dchrCTjo2GcMDsyqiPpeKxOeXrsN1mqs0XjQ/zMF615JnLp0vfO21+sVB5kURudZVf7QkyKpmiOfSJxC0H49KtYC18TPaJHsPmAcjFc1dtD2opYLNtBK8W5qO8FeUjugO6ag3dv2aDIYfwTFKM+Z7LZJ4qgPrq+7NonBisxUzW7A5jPW1q/OFeejZfqOeTLi2WHF6PNB0tIsgeVgdNWkx1l0Ho2/T88MNah624gN39Zim4HksbajXSa7Cc4nD9ySGRP5D5qthVvHwMwacdr1cJqPWytihzffD8YI8s7oVezoUml0K+exbqTYtjpPoOpD8I/E6mcag/783zRSi8b4Qx2cRx6Txl0/B2fLzg/inRMb23Zl0RNgVdZWPBzjk0cTmbrjb6k3R4ErTHeWZGOwtLAUrpMWyBNXJmEejoPDTuV6BxTriWxZf4oqnWX426iywfpjqvynjFRmtkOcvN0OIxBpHOM01jUSvUG0EOLl13vlm7kwiQsrqb8uSuhtevZVfAaNVxXkv94eLD5b2IP48bDCblD6TGHfAjQk0e0J9MfF3WXxKwAA//+Y7F5+PQsAAA==\n\n\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=master,node.kubernetes.io/exclude-from-external-load-balancers=true,node.kubernetes.io/exclude-disruption=true,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -e\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    ifconfig eth0 mtu 1500 up\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\n- path: /etc/systemd/system/etcd.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdSystemdService,'\n\n- path: /opt/azure/containers/setup-etcd.sh\n  permissions: \"0744\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -x\n    if [[ ! -s /etc/environment ]]; then\n        echo \"\" >> /etc/environment\n    fi\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n    sudo sed -i \"/^DAEMON_ARGS=/d\" /etc/default/etcd\n    /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" --listen-metrics-urls \"',variables('masterEtcdMetricURLs')[copyIndex(variables('masterOffset'))],'\" --quota-backend-bytes=2147483648 | tee -a /etc/default/etcd\n  \n\n    #EOF\n\ndisk_setup:\n  /dev/disk/azure/scsi1/lun0:\n    table_type: gpt\n    layout: true\n    overwrite: false\nfs_setup:\n  - label: etcd_disk\n    filesystem: ext4\n    device: /dev/disk/azure/scsi1/lun0\n    extra_opts:\n      - -E\n      - lazy_itable_init=1,lazy_journal_init=1\n  - label: ephemeral0\n    filesystem: ext4\n    device: ephemeral0.1\n    replace_fs: ntfs\nmounts:\n  - - LABEL=etcd_disk\n    - /var/lib/etcddisk\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": 512,
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[parameters('osImageOffer')]",
            "publisher": "[parameters('osImagePublisher')]",
            "sku": "[parameters('osImageSku')]",
            "version": "[parameters('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',variables('provisionScriptParametersMaster'), ' IS_VHD=true /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agentStorageAccountPrefixes": {
      "type": "array",
      "value": "[variables('storageAccountPrefixes')]"
    },
    "agentStorageAccountSuffix": {
      "type": "string",
      "value": "[variables('storageAccountBaseName')]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "primaryScaleSetName": {
      "type": "string",
      "value": "[variables('primaryScaleSetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "vnetResourceGroup": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroupName')]"
    }
  }
}
